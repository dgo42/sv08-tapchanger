[toolchanger]
  t_command_restore_axis: Z
  params_safe_y: 50
  params_close_y: 50
  params_fast_speed: 24000 # Go as fast as we can
  params_path_speed: 1300 # 15mm/s for the actual change
  # Path positions relative to the park position
  # use x,y,z; f= multiplier to path speed; verify= Verify tool detected at end of the move.

  # TapChanger
  #params_dropoff_path: [{'z':0, 'y':4}, {'z':0, 'y':0}, {'z':-7.3, 'y':0}, {'z':-11.2, 'y':3.5}, {'z':-13.2, 'y':8}]
  #params_pickup_path: [{'z':-13.2, 'y':8}, {'z':-11.2, 'y':3.5}, {'z':-7.3, 'y':0}, {'z':3, 'y':0, 'f':0.5, 'verify':1},  {'z':0, 'y':0}, {'z':0, 'y':4}]
  ### Works not very well tool Z position 335
  #params_dropoff_path: [{'z':14, 'y':50}, {'z':14, 'y':0}, {'z':4.7, 'y':0}, {'z':1.8, 'y':3.5}, {'z':0, 'y':50}]
  #params_pickup_path: [{'z':0, 'y':50}, {'z':1.8, 'y':3.5}, {'z':4.7, 'y':0}, {'z':14, 'y':0, 'f':0.5, 'verify':1}, {'z':14, 'y':50}]  
  ### Tool Z position 349
  params_dropoff_path: [{'z':0, 'y':50}, {'z':0, 'y':0}, {'z':-10, 'y':0}, {'z':-12, 'y':2}, {'z':-12, 'y':9}, {'z':-19, 'y':9}, {'z':-19, 'y':50}]
  params_pickup_path: [{'z':-19, 'y':50}, {'z':-19, 'y':9}, {'z':-12, 'y':9}, {'z':-12, 'y':2}, {'z':-10, 'y':0}, {'z':0, 'y':0, 'f':0.5, 'verify':1}, {'z':0, 'y':50}]  

  # StealthChanger
  #params_dropoff_path: [{'z':3.5, 'y':4}, {'z':0, 'y':0}, {'z':-12, 'y':0}]
  #params_pickup_path: [{'z':-12, 'y':2}, {'z':-12, 'y':0}, {'z':1.5, 'y':0, 'f':0.5, 'verify':1}, {'z':0.5, 'y':2.5, 'f':0.5}, {'z':8, 'y':8}, ]  
#  params_dropoff_path: [{'z':2, 'y':60}, {'z':2, 'y':2}, {'z':0, 'y':0}, {'z':-12, 'y':0}, {'z':-12, 'y':30}]
#  params_pickup_path: [{'z':-12, 'y':30}, {'z':-12, 'y':0}, {'z':0, 'y':0, 'f':0.5, 'verify':1}, {'z':0, 'y':2}, {'z':2, 'y':2}, {'z':2, 'y':60}, ]  

  # ClickChanger
  #params_dropoff_path: [{'z':0, 'y':10}, {'z':0, 'y':0}, {'z':-8, 'y':0}, {'z':-9, 'y':3}]
  #params_pickup_path: [{'z':-9, 'y':3}, {'z':-8, 'y':0}, {'z':-4, 'y':0}, {'z':1, 'f':0.5, 'verify':1}, {'z':0}, {'y':10, 'z':0}]

  # Parking position - per tool
  #params_park_x: 142.2
  #params_park_y: -6.0
  #params_park_z: 308.2
  # Default shaper params
  params_input_shaper_freq_x: 62.4
  params_input_shaper_freq_y: 88.6
  initialize_on: home
  require_tool_present: True

  error_gcode:
    PAUSE

  before_change_gcode:
    {% set tn = "T"+(tool.tool_number|string) %}
    {% if printer["gcode_macro " + tn ] %}
       SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="''"
    {% endif %}

  after_change_gcode:
    {% set tn = "T"+(tool.tool_number|string) %}
    {% set tool_number = tool.tool_number|int %}
    {% if (tool_number == 0) %}
      {% set color="\"'FF4040'\"" %}
    {% elif tool_number == 1 %}
      {% set color="\"'FF991C'\"" %}
    {% elif tool_number == 2 %}
      {% set color="\"'FFFF00'\"" %}
    {% elif tool_number == 3 %}
      {% set color="\"'00CE21'\"" %}
    {% elif tool_number == 4 %}
      {% set color="\"'00E1E1'\"" %}
    {% elif tool_number == 5 %}
      {% set color="\"'2196F3'\"" %}
    {% endif %}
    {% if printer["gcode_macro " + tn ] %}
       SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE={color}
    {% endif %}
    {% if tool.params_input_shaper_freq_x %}
      SET_INPUT_SHAPER SHAPER_FREQ_X={tool.params_input_shaper_freq_x} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
    {% endif %}

  dropoff_gcode:
    {% set x = tool.params_park_x|float %}
    {% set y = tool.params_park_y|float %}
    {% set z = tool.params_park_z|float %}
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool.params_dropoff_path %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set cur_z = printer.toolhead.position[2]|float %}
    RESPOND TYPE=echo MSG='Dropping off {tool.name}'
    status_ready
    # Cooldown dropoff tool
    {% if tool.extruder %}
      {% if printer[tool.extruder].target > 0 %}
        M104 T{tool.tool_number} S170
      {% endif %}
    {% endif %}
    G90
    ; Move 1 mm up to avoid crashing into things
    G0 Z{ [cur_z+1.0, max_z]|min } F{fast}
    #   ##############  Move up to the dock  ##############
    ROUNDED_G0 Y={tool.params_safe_y} D=20 F={fast}
    ROUNDED_G0 X={x} D=150 F={fast}
    {% set speed = tool.params_path_speed|float %}
    ROUNDED_G0 Z={z + path[0]['z']|float} D=20 F={fast}
    ROUNDED_G0 Y={y + path[0]['y']|float} D=0 F={speed}
    #  ############## Run the path ##############
    {% for pos in path %}
      {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
      G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
    {% endfor %}

  pickup_gcode:
    {% set x = tool.params_park_x|float %}
    {% set y = tool.params_park_y|float %}
    {% set z = tool.params_park_z|float %}
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool.params_pickup_path %}
    status_printing
    RESPOND TYPE=echo MSG='Picking up {tool.name}'
    # Preheat next hotend
    {% if tool.extruder %}
      M104 T{tool.tool_number} S{printer[tool.extruder].target|int}
    {% endif %}
    G90
    #   ##############  Fast to the last point  ##############
    ROUNDED_G0 Y={tool.params_close_y} F={fast} D=5
    ROUNDED_G0 X={x} Z={z + path[0]['z']|float} F={fast} D=5
    ROUNDED_G0 Y={y + path[0]['y']|float} F={fast} D=0
    # Run the path
    {% for pos in path %}
      {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
      G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
      {% if 'verify' in pos %}
        VERIFY_TOOL_DETECTED T={tool.tool_number}
      {% endif %}
    {% endfor %}
    # Restore the position with smooth rounded move.
    {% set speed = tool.params_path_speed|float %}
    ROUNDED_G0 Y={tool.params_safe_y} F={fast} D=20
    {% if 'Z' in restore_position %}
      ROUNDED_G0 Z={restore_position.Z + 0.2} F={fast} D=150
    {% endif %}
    {% if 'X' in restore_position %}
      ROUNDED_G0 X={restore_position.X} F={fast} D=1000
    {% endif %}
    {% if 'Y' in restore_position %}
      ROUNDED_G0 Y={restore_position.Y} F={fast} D=0
    {% endif %}
    {% if tool.extruder %}
      M109 T{tool.tool_number} S{printer[tool.extruder].target|int}
    {% endif %}
    {% if 'Z' in restore_position %}
      ROUNDED_G0 Z={restore_position.Z} D=20 F={fast}
    {% endif %}
    ROUNDED_G0 D=0

[gcode_macro TOOL_ALIGN_START]
gcode:
    INITIALIZE_TOOLCHANGER # Detect current tool
    _TOOL_ALIGN_START

[gcode_macro _TOOL_ALIGN_START]
gcode:
    {% set tool = printer[printer.toolchanger.tool] %}
    SET_TOOL_PARAMETER PARAMETER='params_path_speed' VALUE=300
    SET_GCODE_OFFSET X=0 Y=0 Z=0
    G0 Y{tool.params_safe_y} F{tool.params_fast_speed}
    G0 X{tool.params_park_x} Z{tool.params_park_z}
    G0 Y{tool.params_park_y|float + 100.0}

[gcode_macro TOOL_ALIGN_TEST]
gcode:
    {% set curpos = printer.gcode_move.gcode_position %}
    {% if curpos[1] > 0 %}
      # Check if Y is not too far, to very unrealistic tests.
      RESPOND TYPE=error MSG='Test aborted. Tool too far away from the dock.'
    {% else %}
      INITIALIZE_TOOLCHANGER # Detect current tool
      SET_GCODE_OFFSET X=0 Y=0 Z=0
      SET_TOOL_PARAMETER PARAMETER='params_park_x' VALUE={curpos[0]}
      SET_TOOL_PARAMETER PARAMETER='params_park_y' VALUE={curpos[1]}
      SET_TOOL_PARAMETER PARAMETER='params_park_z' VALUE={curpos[2]}
      TEST_TOOL_DOCKING RESTORE_AXIS=XYZ
    {% endif %}

[gcode_macro TOOL_ALIGN_DONE]
gcode:
    {% set tool = printer[printer.toolchanger.tool] %}
    SAVE_TOOL_PARAMETER PARAMETER='params_park_x'
    SAVE_TOOL_PARAMETER PARAMETER='params_park_y'
    SAVE_TOOL_PARAMETER PARAMETER='params_park_z'
    RESET_TOOL_PARAMETER PARAMETER='params_path_speed'
    G0 Y{tool.params_safe_y} F{tool.params_fast_speed}

#{% set tool_z_offset = printer[tool].gcode_z_offset %}
#{% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset %}
#SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float+probe_z_offset|float}

[gcode_macro DROP_HEAD]
gcode:
  _INITIALIZE_FROM_DETECTED_TOOL
  {% set tool = printer[printer.toolchanger.tool] %}
  {% if tool %}
    {% set x = tool.params_park_x|float %}
    {% set y = tool.params_park_y|float %}
    {% set z = tool.params_park_z|float %}
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool.params_dropoff_path %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    RESPOND TYPE=echo MSG='Dropping off {tool.name}'
    status_ready
    G90
    #   ##############  Move up to the dock  ##############
    ROUNDED_G0 Y={tool.params_safe_y} D=20 F={fast}
    ROUNDED_G0 X={x} D=150 F={fast}
    {% set speed = tool.params_path_speed|float %}
    ROUNDED_G0 Z={z + path[0]['z']|float} D=20 F={fast}
    ROUNDED_G0 Y={y + path[0]['y']|float} D=0 F={speed}
    #  ############## Run the path ##############
    {% for pos in path %}
      {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
      G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
    {% endfor %}
    ROUNDED_G0 Y={tool.params_safe_y} D=0 F={speed}
    ROUNDED_G0 D=0
  {% endif %}

[gcode_macro PICKUP_HEAD]
gcode:
  _INITIALIZE_FROM_DETECTED_TOOL
  {% set tool_number = params.TOOL|int %}
  {% set tool_name = "tool T" + tool_number|string %}
  {% set tool = printer[tool_name] %}
  {% if tool %}
    RESPOND TYPE=echo MSG='Picking on {tool.name}'
    {% set x = tool.params_park_x|float %}
    {% set y = tool.params_park_y|float %}
    {% set z = tool.params_park_z|float %}
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool.params_pickup_path %}
    status_printing
    RESPOND TYPE=echo MSG='Picking up {tool.name}'
    G90
    #   ##############  Fast to the last point  ##############
    ROUNDED_G0 Y={tool.params_close_y} F={fast} D=5
    ROUNDED_G0 X={x} Z={z + path[0]['z']|float} F={fast} D=5
    ROUNDED_G0 Y={y + path[0]['y']|float} F={fast} D=0
    # Run the path
    {% for pos in path %}
      {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
      G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
      {% if 'verify' in pos %}
        VERIFY_TOOL_DETECTED T={tool.tool_number}
      {% endif %}
    {% endfor %}
    {% set speed = tool.params_path_speed|float %}
    ROUNDED_G0 Y={tool.params_safe_y} D=0 F={speed}
    ROUNDED_G0 D=0
    RESPOND TYPE=echo MSG='Picked up {tool.name}'
  {% endif %}

#[gcode_macro TEST_TOOL]
#gcode:
#  _INITIALIZE_FROM_DETECTED_TOOL
#  {% set tool_number = params.TOOL|int %}
#  {% set tool_name = "tool T" + tool_number|string %}
#  {% set tool = printer[tool_name] %}
#  RESPOND TYPE=echo MSG='Picking on {tool.name}'

